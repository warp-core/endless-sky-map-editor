name: CD

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize]
    paths:
    - 'source/**'
    - '.github/workflows/**'
    - 'CMakeLists.txt'
    - 'CMakePresets.json'
    - 'vcpkg.json'
    - 'vcpkg-configuration.json'


concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  cd_windows_x64:
    name: Windows
    runs-on: windows-2022
    env:
      OUTPUT: EndlessSkyEditor-win64-continuous.zip
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - uses: actions/checkout@v4
      with:
        show-progress: false
    - uses: lukka/get-cmake@v3.28.3
    - uses: lukka/run-vcpkg@v11
    - uses: lukka/run-cmake@v10
      with:
        configurePreset: 'mingw-release'
        buildPreset: 'mingw-ci-release'
    - name: Test
      run: |
        dir
        cd build
        dir
        cd release
        dir
        cd vcpkg_installed
        dir
        cd win64-release
        dir
        cd bin
        dir
        cd ../Qt6
        dir
        cd plugins
        dir
        cd imageformats
        dir
        cd ../platforms
        dir
    - name: Package Application
      run: |
        cmake --install build/release
        copy -Path build/release/vcpkg_installed/win64-release/bin/jpeg62.dll -Destination install/release/jpeg62.dll
        copy -Path build/release/vcpkg_installed/win64-release/Qt6/plugins/imageformats/qjpeg.dll -Destination install/release/imageformats/qjpeg.dll
        copy -Path build/release/vcpkg_installed/win64-release/Qt6/plugins/platforms/qwindows.dll -Destination install/release/platforms/qwindows.dll
        7z a ${{ env.OUTPUT }} "./install/release/*"
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.OUTPUT }}
        path: ${{ env.OUTPUT }}


  cd_macos_x64:
    name: MacOS
    runs-on: macos-13
    env:
      OUTPUT: EndlessSkyEditor-macOS-continuous.zip
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - uses: actions/checkout@v4
      with:
        show-progress: false
    - name: Install pkg-config
      run: brew install automake autoconf-archive
    - uses: lukka/get-cmake@v3.28.3
    - uses: lukka/run-vcpkg@v11
    - uses: lukka/run-cmake@v10
      with:
        configurePreset: 'macos-release'
        buildPreset: 'macos-ci-release'
    - name: Package Application
      run: |
        cmake --install build/release
        7z a ${{ env.OUTPUT }} "./install/release/*"
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.OUTPUT }}
        path: ${{ env.OUTPUT }}


  cd_upload_artifacts_to_release:
    name: Upload
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs:
      - cd_windows_x64
      - cd_macos_x64
    permissions:
      contents: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      OUTPUT_WINDOWS: EndlessSkyEditor-win64-continuous.zip
      OUTPUT_MACOS: EndlessSkyEditor-macOS-continuous.zip
    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false
      - name: Install github-release
        run: |
          go install github.com/github-release/github-release@latest
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Set environment variables
        run: |
          echo "GITHUB_USER=$( echo ${{ github.repository }} | cut -d/ -f1 )" >> $GITHUB_ENV
          echo "GITHUB_REPO=$( echo ${{ github.repository }} | cut -d/ -f2 )" >> $GITHUB_ENV
      - name: Move/Create continuous tag
        run: |
          git tag --force continuous ${{ github.sha }}
          git push --tags --force
      - name: Setup continuous release
        run: |
          DESCRIPTION="Triggered on $(date -u '+%Y/%m/%d, %H:%M') UTC by commit ${{ github.sha }} (@${{ github.actor }})

          This is an automated build of the latest source. It may be unstable or even crash, corrupt your save or eat your kitten. Use with caution!

          https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          if ! github-release info -t continuous > /dev/null 2>&1; then
            github-release release \
              --tag continuous \
              --name "Continuous Build" \
              --description "$DESCRIPTION" \
              --pre-release
          else
            github-release edit \
              --tag continuous \
              --name "Continuous Build" \
              --description "$DESCRIPTION" \
              --pre-release
          fi
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{ github.workspace }} # This will download all files to e.g `./EndlessSky-win64.zip/EndlessSky-win64.zip`
      - name: Add ${{ env.OUTPUT_WINDOWS }} to release tag
        continue-on-error: true
        run: |
          github-release upload \
            --tag continuous \
            --replace \
            --name ${{ env.OUTPUT_WINDOWS }} \
            --file ${{ env.OUTPUT_WINDOWS }}/${{ env.OUTPUT_WINDOWS }}
      - name: Add ${{ env.OUTPUT_MACOS }} to release tag
        run: |
          github-release upload \
            --tag continuous \
            --replace \
            --name ${{ env.OUTPUT_MACOS }} \
            --file ${{ env.OUTPUT_MACOS }}/${{ env.OUTPUT_MACOS }}
